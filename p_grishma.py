# -*- coding: utf-8 -*-
"""P Grishma

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O4lIYEko-ctzzj5xOlyDqINljroeUlOI
"""

import  numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

from google.colab import files
uploaded = files.upload()

import pandas as pd
df = pd.read_excel("Airbnb_Open_Data.xlsx")

df.head()

df.info()

df.duplicated().value_counts()

df[df['neighbourhood group'] == 'brookln']

df.drop_duplicates(inplace=True)

df.rename(columns = {
    'price':'price_$',
    'service fee': 'service_fee_$'
}, inplace = True)

df.dropna(inplace=True)

df['price_$'] = df['price_$'].astype(float)
df['service_fee_$'] = df['service_fee_$'].astype(float)
df['id'] = df['id'].astype(str)
df['host id'] = df['host id'].astype(str)
df['last review'] = pd.to_datetime(df['last review'])
df['Construction year'] = df['Construction year'].astype(int)

df.loc[df['neighbourhood group'] == 'brookln', 'neighbourhood group'] = 'Brooklyn'

df = df.drop(df[df['availability 365'] > 500]. index)

df.duplicated().value_counts()

df.info()

df.describe()

property_types = df['room type'].value_counts().to_frame()
property_types

import matplotlib.pyplot as plt

room_type_bar = plt.bar(property_types.index, property_types.loc[:,"count"] );
plt.bar_label(room_type_bar, labels = property_types.loc[:,"count"], padding = 4 );
plt.ylim([0,50000]);
plt.xlabel('Room Type');
plt.ylabel('Room Type Count');
plt.title('Property Types and their count in the Dataset');

hood_group = df['neighbourhood group'].value_counts().to_frame()
hood_group

hood_group_bar = plt.bar(hood_group.index, hood_group.loc[:,"count"] );
plt.bar_label(hood_group_bar, labels = hood_group.loc[:,"count"], padding = 4 );
plt.ylim([0,40000]);
plt.xlabel('Neighbourhood Group');
plt.ylabel('Number of Listings');
plt.xticks(rotation = 45);
plt.title('Which Neighbourhood Group has the highest number of  Listings?');

avg_price = df.groupby('neighbourhood group')['price_$'].mean().sort_values(ascending = False).to_frame()
avg_price_bar = plt.bar(avg_price.index, avg_price.loc[:,'price_$']);
plt.bar_label(avg_price_bar, labels = round(avg_price.loc[:,"price_$"], 2), label_type = 'edge', padding = 4);
plt.ylim([0,700]);
plt.xlabel('Neighbourhood Group');
plt.ylabel('Average Price per Listings ($)');
plt.xticks(rotation = 45);
plt.title('Average Price per Listings ($) in each Neighborhood Group')

df.groupby(df['Construction year'])['price_$'].mean().to_frame().plot();
plt.xlabel('Construction Year');
plt.ylabel('Average Price ($)');
plt.title('Average Price ($) for Properties in each Construction Year');

hosts = df.groupby('host name')['calculated host listings count'].sum().sort_values(ascending = False).nlargest(10).to_frame()
host_bar = plt.bar(hosts.index, hosts.loc[:, 'calculated host listings count' ]);
plt.bar_label(host_bar, label = hosts.loc[:, 'calculated host listings count'], label_type = 'edge', padding = 3);
plt.xlabel('Host Name');
plt.ylabel('calculated Host Listings count');
plt.xticks(rotation = 80);
plt.ylim([0, 120000]);
plt.title('Top 10 Hosts by Calculated host Listings Count');

review = df.groupby('host_identity_verified')['review rate number'].mean().sort_values(ascending = False).to_frame()
review

review_bar = plt.bar(review.index, review.loc[:,"review rate number"]);
plt.bar_label(review_bar, labels = round(review.loc[:,"review rate number"], 2), padding = 4 );
plt.ylim([0,4]);
plt.xlabel('Host Identity Verified');
plt.ylabel(' Average Review Rate Number');
plt.title(' Average Review Rate for each Verification Statictics.');

import seaborn as sns
base_color = sns.color_palette()[0]
sns.boxplot(data = df, x = "host_identity_verified", y = "review rate number", color = base_color);
plt.xlabel('Host Identity Verified');
plt.ylabel('Review Rate Number');
plt.title('Review Rate Number for each Verification Statictics.');

df['price_$'].corr(df['service_fee_$'])

sns.regplot(df, x = 'price_$', y = 'service_fee_$');
plt.xlabel('Price ($)');
plt.ylabel('Service Fee ($)');
plt.title('A  Regression Plot showing the Correlation of the Price of a Listing and its Service Fee');

ARRN = df.groupby(['neighbourhood group', 'room type']) ['review rate number'].mean().to_frame()
ARRN

plt.figure(figsize = [12,10]);
sns.barplot(data = df, x = 'neighbourhood group', y = 'review rate number', hue = 'room type');
plt.xlabel('Neighbourhood Group');
plt.ylabel('Average Review Rate');
plt.title('Average Review Rate for each Room/Property Type in each Neighbourhood Group.');

sns.regplot(df, x = 'calculated host listings count', y = 'availability 365');
plt.xlabel('Calculated Host Listings');
plt.ylabel('Availability 365');
plt.title('A Regression Plot of the Relationship between Calculated Host Listings Count and Availability 365');

df['calculated host listings count'].corr(df['availability 365'])